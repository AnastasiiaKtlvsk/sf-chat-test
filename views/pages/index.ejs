
<html>
  <body>
      <h1>Let’s start chatting...</h1>
      <br />
      Click the button to start a chat.
      <br />
      
      <span id="  " style="display:none"></span>

      <div class="btn btn-box btn-acid-yellow chatSFButton" id="secondaryButton" onclick="document.getElementsByClassName('uiButton')[0].click()" type="button" value="Чат">Онлайн Чат</div>
  

      <div class="embeddedServiceHelpButton" style="display: block;">
        <div class="helpButton">
            <button class="uiButton helpButtonEnabled" href="javascript:void(0)" onclick="console.log('chat button clicked');" >
                <span class="embeddedServiceIcon" aria-hidden="true" data-icon="" style="display: inline-block;"></span>
                <span class="helpButtonLabel" id="helpButtonSpan" aria-live="polite" aria-atomic="true">
                    <span class="assistiveText">Live chat:</span><span class="message">Есть вопросы?</span>
                </span>
            </button>
        </div>
    </div>

    </body>
  <head>

      <style type='text/css'>
        .btn-box {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            width: 100%;
        }

        .btn-acid-yellow {
            color: #000;
            border: 1px solid #f8ff13;
            background-color: #f8ff13;
            box-shadow: 0 1px 2px 0 rgba(0,0,0,0.5);
            border-radius: 1px;
        }

				 .embeddedServiceHelpButton .helpButton .uiButton {
					background-color: #F7E918;
					font-family: "Arial", sans-serif;
				}
				.embeddedServiceHelpButton .helpButton .uiButton:focus {
					outline: 1px solid #F7E918;
				}
			
				.embeddedServiceHelpButton .uiButton .helpButtonLabel .message{
					overflow: visible !important;
				}
			
				.embeddedServiceLiveAgentStateChatHeader:not(.alert) .message{
					max-width: 82%;
					overflow: visible;
					white-space: normal;
				}
			
				.embeddedServiceLiveAgentStateChatHeader .content {
					height: 100%;
				}
			
				.message{
					background-color: transparent;
					border-style: hidden;
					border-width: 0px;
					color: #888b0a;
					font-size: small;
					font-weight: bold;
				}
			
				
				.nascondi {
					display: none !important;
				}
			
			
				
			
				.loadingcenter {
			
				position: fixed;
				top: 50%;
				left: 50%;
				margin-top: -100px;
				margin-left: -200px;
			}
      </style>


      <script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
      <script type="text/javascript">

      

        /**
			here you have to set the AccountID from the login user
			*/
			var accountId = new URLSearchParams(window.location.search).get('accountID');
      
          var waitForButtonEnabled = function(){
              var observer = new MutationObserver(function (mutations, me) {
              var button = document.getElementsByClassName('uiButton helpButtonEnabled')[0];
              if (button) {
                  me.disconnect(); 
                  button.click();
                  return;
              }
              });
      
              observer.observe(document, {
                      childList: true,
                      subtree: true
                  });
              }
      
          waitForButtonEnabled();
      
      </script>
      <script type='text/javascript'>

          var chatUuid;
          
          window.addEventListener('hashchange', function(e){
              var url = window.location.href;
              embedded_svc.liveAgentAPI.sendCustomEvent(chatUuid  ,url);
          });        
          
          var initESW = function(gslbBaseURL) {
              embedded_svc.settings.displayHelpButton = true; //Or false
              embedded_svc.settings.language = ''; //For example, enter 'en' or 'en-US'

              
              embedded_svc.settings.enabledFeatures = ['LiveAgent'];
              embedded_svc.settings.entryFeature = 'LiveAgent';
              embedded_svc.settings.autoOpenPostChat = true;

              
              embedded_svc.settings.extraPrechatFormDetails = 
                  (accountId) ?[

                  {"label":"AccountID", "transcriptFields": ["PreChat_Form_AccountID__c"], "value": accountId},
                  {"label":"Start Url", "transcriptFields": ["Prechat_StartUrl__c"], "value": window.location.href,"displayToAgent":false},
                  {"label":"Is Logged", "transcriptFields": ["Is_Logged__c"], "value" : "true"}] :

                  [{"label":"Email",       "transcriptFields": ["PreChat_Form_Email__c"]},
                  {"label":"Phone",       "transcriptFields": ["PreChat_Form_Phone__c"]},
                  {"label":"Last Name",   "transcriptFields": ["PreChat_Form_Name__c"]},
                  {"label":"Subject",     "transcriptFields": ["Prechat_Form_Subject__c"]},
                  {"label":"Start Url",   "transcriptFields": ["Prechat_StartUrl__c"], "value": window.location.href,"displayToAgent":false}                    
              ]; 

              embedded_svc.addEventHandler("onChatEstablished", function(data) {
                  console.log("onChatEstablished event was fired.  liveAgentSessionKey was " + data.liveAgentSessionKey);
                      chatUuid = data.liveAgentSessionKey;
              });

              embedded_svc.init(
                  'https://parimatch--staging.my.salesforce.com',
                  'https://staging-parimatch.cs102.force.com',
                  gslbBaseURL,
                  '00D1j0000008d3o',
                  (accountId) ? 'Chat_Deployment_LoginUser' : 'Chat_Deployment_Desktop',
                  {
                      baseLiveAgentContentURL: 'https://c.la1-c1cs-cdg.salesforceliveagent.com/content',
                      deploymentId: '5722p0000000G2t',
                      buttonId: '5731j0000004HKJ',
                      baseLiveAgentURL: 'https://d.la1-c1cs-cdg.salesforceliveagent.com/chat',
                      eswLiveAgentDevName: (accountId) ? 'EmbeddedServiceLiveAgent_Parent04I2p000000kBO6EAM_171a5c3428d' : 
                      'EmbeddedServiceLiveAgent_Parent04I2p000000kBNSEA2_170a5e33e28',
                      isOfflineSupportEnabled: false
                  }
              );
          };
          

          if (!window.embedded_svc) {
              var s = document.createElement('script');
              s.setAttribute('src', 'https://parimatch--staging.my.salesforce.com/embeddedservice/5.0/esw.min.js');
              s.onload = function() {
                  initESW(null);
              };
              document.body.appendChild(s);
          } else {
              initESW('https://service.force.com');
          }



          
          function funcRemoveChatButton2() {
            if(document.querySelector('.uiButton') && document.getElementById('secondaryButton')) {
            document.getElementById('secondaryButton').click();
                  var waitForButtonEnabled = function(){
                  var observer = new MutationObserver(function (mutations, me) {
                  var button = document.getElementsByClassName('uiButton helpButtonEnabled')[0];
                  if (button) {
                      me.disconnect(); 
                      button.click();
                      return;
                  }
                  });
                  observer.observe(document, {
                          childList: true,
                          subtree: true
                      });
                  }
              waitForButtonEnabled();
            if(funcRemoveChatButton2Timeout)
            clearInterval(funcRemoveChatButton2Timeout);  
             }
             else {
          };
          }
           funcRemoveChatButton2Timeout = setInterval(funcRemoveChatButton2, 10);  
          
      </script>
  </head>
  



</html>

