<!DOCTYPE html>
<html>
<head>
	<title></title>
	
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
	<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1">

</head>
<body>
	<h>Test Chat </h>
	<style>
		@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@300;400;700&display=swap');
	</style>
<style>
.chasitorText, .slds-input, .textAreaBox {    
    -webkit-user-select: text !important;
	user-select: text !important;
	-moz-user-select: text !important;
	-ms-user-select: text !important;
}

@media screen and (max-width: 1024px) {
	
	.minimizedContainer {
		position:fixed !important;
		bottom:70px !important;
		width:115px !important;
		right:2px !important;	
		height: 20px !important;
		font-weight: normal !important;
	}

	.cChatButton .messageText {
		margin-left: 3px !important;
		font-size: 10px !important;
	}

	.cChatButton .buttonMinimized {
		height: 30px !important;
	}

	.cChatButton .chatIcon {
		width: 14px !important;
		height: 14px !important;
	}
}

li.wrapper.chatMessage.chasitor.embeddedServiceLiveAgentStateChatItem.embeddedServiceLiveAgentStateChatMessage,
li.wrapper.chatMessage.chasitor.embeddedServiceLiveAgentStateChatItem.embeddedServiceLiveAgentStateChatBubble.embeddedServiceLiveAgentStateChatFileTransferMessage,
li.wrapper.embeddedServiceLiveAgentStateChatMessage  {
	min-width: 2px !important;
}

svg.slds-icon.slds-icon-text-default.slds-icon_x-small {
	height: 20px !important;
	min-height: 20px !important;
	width: 20px !important;
	min-width: 20px !important;
}

.helpButtonEnabled .embeddedServiceIcon {
	width: 16.67px;
	height: 16.67px;
	background-size: 16.67px;
	background-image: url('https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYLZQA2&d=/a/0E000000GNHh/r7XNnbD36f8lj8NtuQBcB55Me.jNG6IsoWAsz1vCsGI&operationContext=DELIVERY&viewId=05H0E000000HBRCUA4&dpt=');
}

.dialog-button-1 {
	width: 44px;
	height: 44px;
	border: 1px solid #262626 !important;
	box-sizing: border-box;
	background-color: white !important;
	border-radius: 4px;
	background-image: url('https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYSYQA2&d=/a/0E000000GNIV/6lZThIMuu.NdWhZ7vpuudBhsR1GR6rVGQY2yZlPm.M0&operationContext=DELIVERY&viewId=05H0E000000HBThUAO&dpt=') !important;
	background-size: 16px !important;
	background-position-x: center !important;
	background-position-y: center !important;
	background-repeat: no-repeat !important;
	display: block !important;
}

.waitingMessage, .waitingGreeting {
	color: black !important;
}

@media only screen and (min-width: 48em) { 
	.embeddedServiceHelpButton .helpButton .uiButton:hover::before, .embeddedServiceHelpButton .helpButton .uiButton:focus::before {
		display: none !important;
	}
}

h3#dialogTextTitle, .waitingGreeting, .embeddedServiceSidebarButton {
    font-weight: 700 !important;
}

.embeddedServiceSidebarButton {
    font-size: 14px !important;
}

button.minimizeButton:focus, button.closeButton:focus{
	outline: none;
	box-shadow: none;
}

.embeddedServiceSidebarExtendedHeader, .headerAnnouncement {
	display: none !important;
}

.embeddedServiceSidebarMinimizedDefaultUI {
	background: #F8FF13 !important;
	background-color: #F8FF13 !important;
}

.embeddedServiceHelpButton .helpButton {
	bottom: 16px !important;
	height: 40px !important;
	width: 168px !important;
	display: flex !important;
	justify-content: center !important;
	border-radius: 30px !important;
}

.embeddedServiceHelpButton .helpButton .uiButton {
	background-color: #222222;
	font-family: "Circe", sans-serif;
	color: black;
	height: 40px !important;
	width: 168px !important;
	display: block !important;
}

.embeddedServiceHelpButton .helpButton .uiButton:focus {
	outline: 1px solid #222222;
}

.embeddedServiceSidebar.layout-docked .dockableContainer, .embeddedServiceSidebarMinimizedDefaultUI.helpButton {
	border-radius: 0px;
}

.embeddedServiceHelpButton .helpButton .uiButton,
.embeddedServiceSidebarMinimizedDefaultUI.helpButton,
.embeddedServiceSidebarMinimizedDefaultUI.minimizedContainer:focus,
.embeddedServiceSidebarMinimizedDefaultUI.minimizedContainer:hover {
	background-color: #F8FF13 !important;
	border-color: #F8FF13 !important;
	color:#000000 !important;
	border-radius: 30px !important;
	padding: 0px 0px 0px 0px !important;
	box-shadow: none !important;
	outline: none !important;
	border-style: unset !important;
	text-decoration: none !important;
}

.helpButtonLabel {
	display: inline-block !important;
	line-height: 16.67px !important;
}

span.fileDescription.uiOutputText, span.fileName.uiOutputText, .uiOutputRichText a  {
	color: black !important;
}

.dialogButtonContainer {
	display: flex !important;
	justify-content: space-between !important;
	flex-direction: row-reverse !important;
	width: 290px !important;
	margin: auto !important;
	padding: 0 0px 16px !important;
}

.dialog-button-0 {
	width: 236px;
	height: 44px;
}

.message, .embeddedServiceSidebarMinimizedDefaultUI .content {
	background-color: #F8FF13 !important;
	border: none !important;
	padding: 0 0 0 0 !important;
	margin: 0 0 0 0  !important;
	font-family: Roboto Condensed;
	font-style: normal;
	font-weight: bold;
	font-size: 12px;
	line-height: 16.67px;
	display: flex;
	align-items: center;
	text-transform: uppercase;
	color:#000000;
	text-decoration: none;
}

.embeddedServiceHelpButton .helpButton .helpButtonEnabled:hover::before, .embeddedServiceHelpButton .helpButton .helpButtonEnabled:focus::before {
	background-color: white;
}

.messageContent path {
	stroke: black;
	fill: black;
}

.embeddedServiceSidebarButton .label, .embeddedServiceSidebarButton:disabled .label, .embeddedServiceLiveAgentStateChatPlaintextMessageDefaultUI.chasitor.plaintextContent {
	color: black;
}

.dialog-button-1 .bBody, .helpButtonEnabled .embeddedServiceIcon::before, .helpButtonEnabled .embeddedServiceIcon svg, .embeddedServiceHelpButton .helpButton .uiButton.helpButtonDisabled   {
	display: none !important;
}

.embeddedServiceSidebarDialogState .dialogButton,
.embeddedServiceSidebarDialogState .dialogButton:focus,
.embeddedServiceSidebarDialogState .dialogButton:hover {
	background-color: #F8FF13;
	border-color: #F8FF13;
	color:#000000;
	padding: 10px 16px 10px 16px;
	box-shadow: none;
	outline: none;
	border-style: unset;
	text-decoration: none;
}

.embeddedServiceSidebarButton.uiButton--inverse:not(:disabled):focus,
.embeddedServiceSidebarButton.uiButton--inverse:not(:disabled):hover,
.embeddedServiceSidebarButton.uiButton--inverse, .embeddedServiceSidebarButton.uiButton--inverse:disabled {
	background-color: #F8FF13;
	margin-bottom: 8px;
}

.embeddedServiceSidebarButton.uiButton--inverse .label {
	color:#000000 !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .chasitorControls .uiInput {
	border: 1px solid #D9D9D9;
}

.embeddedServiceLiveAgentStateChat .messageArea {
	border: none;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:hover,
.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:focus,
.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:active {
	color: #787c80 !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:focus {
	box-shadow: none;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu-items .slds-dropdown__item>a {
	border: none !important;
	box-shadow: none !important;
}

.embeddedServiceSidebarButton:not(:disabled):focus, .embeddedServiceSidebarButton:not(:disabled):hover,
.embeddedServiceLiveAgentStateChat .endChatContainer .endChatButton {
	background: var(--lwc-colorBrandSecondary,#f8ff13);
	margin-bottom: 8px;
}

.uiButton--default:hover .label, .uiButton--default:focus .label {
	color:black;
}

.embeddedServiceLiveAgentStateChatInputFooter {
	margin-bottom: 0px !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-dropdown-trigger_click.slds-is-open .slds-button {
	color:#787c80;
}

.embeddedServiceLiveAgentStateChat .messageArea:focus {
	border: none;
}

.embeddedServiceLiveAgentStateWaiting .loadingBall,
.embeddedServiceLiveAgentQueuePosition .embeddedServiceLoadingBalls .loadingBall {
	background-color: #787c80 !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu-items .slds-dropdown__item>a {
    color: #5a5d60 !important;
}

</style>

<script type="text/javascript" src='https://parimatch--devpro--c.visualforce.com/resource/1615293764000/ChatTextWin1251'></script>
<script type="text/javascript" charset="UTF-8" >

document.onclick = function(event) {
  	var tagName = event.target.tagName;
  	if (tagName == "EMBEDDEDSERVICE-CHAT-HEADER") {
		var counter = document.getElementsByClassName("dot")[0];
		if (counter) {
			counter.style.visibility = "hidden";
			document.title = title;
		}
  	}
}


var title = document.title;

document.addEventListener(
    "setCounter",
    function(event) {
      var counter = document.getElementsByClassName("dot")[0];
      if (counter) {
        counter.style.visibility = "visible";
      }
    },
    false
);


document.addEventListener(
  "setCustomField",
  function(event) {
    var detail = event.detail;
    embedded_svc.settings.extraPrechatFormDetails[0].value = event.detail.name;
    embedded_svc.settings.extraPrechatFormDetails[1].value = event.detail.email;
    embedded_svc.settings.extraPrechatFormDetails[2].value = event.detail.phone;
    event.detail.callback();
  },
  false
);

		var accountId = '{{userID}}';
		accountId = (accountId == "undefined") ? null : accountId;
		var language = 'ru';

		var initESW = function(gslbBaseURL) {
    embedded_svc.settings.avatarImgURL = 'https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYFqQAM&d=/a/0E000000GNHX/OJDIjzopJQi7OOcvCcCRZeXD6D3rqn3820_3pgs1AYE&operationContext=DELIVERY&viewId=05H0E000000HBQiUAO&dpt=';
    embedded_svc.settings.chatbotAvatarImgURL = 'https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYFqQAM&d=/a/0E000000GNHX/OJDIjzopJQi7OOcvCcCRZeXD6D3rqn3820_3pgs1AYE&operationContext=DELIVERY&viewId=05H0E000000HBQiUAO&dpt=';
	embedded_svc.settings.displayHelpButton = true;
    embedded_svc.settings.language = language;

    embedded_svc.settings.defaultMinimizedText = chatText[0];
    embedded_svc.settings.disabledMinimizedText = chatText[0];
    embedded_svc.settings.loadingText = chatText[1];

    embedded_svc.settings.extraPrechatFormDetails = (accountId) ?
    [
        {"label":"PreChat Form AccountID", "transcriptFields": ["PreChat_Form_AccountID__c"], "value" : accountId},
        {"label":"Start Url", "transcriptFields": ["Prechat_StartUrl__c"], "value": window.location.href,"displayToAgent":false},
        {"label":"Is Logged", "transcriptFields": ["Is_Logged__c"], "value" : "true"}
    ] :

    [
        {"label":"Name",  "transcriptFields": ["PreChat_Form_Name__c"]},
        {"label":"Email", "transcriptFields": ["PreChat_Form_Email__c"]},
        {"label":"Phone", "transcriptFields": ["PreChat_Form_Phone__c"]},
        {"label":"Start Url", "transcriptFields": ["Prechat_StartUrl__c"], "value": window.location.href,"displayToAgent":false}
    ];

	embedded_svc.settings.extraPrechatInfo = [{"entityFieldMaps":[{"doCreate":false,"doFind":false,"fieldName":"LastName","isExactMatch":true,"label":"Last Name"}],"entityName":"Contact","showOnCreate":true}];

    embedded_svc.settings.enabledFeatures = ['LiveAgent'];
    embedded_svc.settings.entryFeature = 'LiveAgent';

    embedded_svc.init(
        'https://parimatch.my.salesforce.com',
        'https://parimatchchat.secure.force.com/surveychat',
            gslbBaseURL,
            '00D2p00000139LC',
            (accountId) ? 'Chat_Deployment_LoginUser_New' : 'Chat_Deployment_Desktop_New',
            {
                baseLiveAgentContentURL: 'https://c.la1-c2-cdg.salesforceliveagent.com/content',
                deploymentId: '5722p0000000G2t',
                buttonId: '5732p0000000GqZ',
                baseLiveAgentURL: 'https://d.la1-c2-cdg.salesforceliveagent.com/chat',
                eswLiveAgentDevName: (accountId) ? 'EmbeddedServiceLiveAgent_Parent04I2p0000008PviEAE_177ee7ddf7d' :
                'EmbeddedServiceLiveAgent_Parent04I2p0000008PvdEAE_177ee4a5348',
                isOfflineSupportEnabled: false
            }
    );
};

if (!window.embedded_svc) {
    var s = document.createElement('script');
    s.setAttribute('src', 'https://parimatch--c.visualforce.com/resource/1615392897000/ChatMinScript/min.js');
    s.onload = function() {
        initESW(null);
    };
    document.body.appendChild(s);
} else {
    initESW('https://service.force.com');
}

	</script>

<!--    <script type="text/javascript" >
        function g() {
            this.connection = new k(this);
            this.fileTransfer = new l;
            this.visitorInfo = new n;
            this.browserSessionInfo = {};
            this.inviteButton = {};
            this.hasInvitationsLoaded = !1;
            b.setDefaultButtonText("LiveAgent", "Chat with an Expert", "Agent Offline", "Live chat:");
            b.addDefaultSetting("avatarImgURL", "");
            b.addDefaultSetting("prechatBackgroundImgURL", "");
            b.addDefaultSetting("waitingStateBackgroundImgURL", "");
            b.addDefaultSetting("smallCompanyLogoImgURL", "");
            b.addDefaultSetting("headerBackgroundURL", "");
            b.addDefaultSetting("extraPrechatInfo", []);
            b.addDefaultSetting("extraPrechatFormDetails", []);
            b.addDefaultSetting("agentAvailableOnButtonClick", !1);
            b.settings.isOfflineSupportEnabled &&
                (b.settings.offlineSupportMinimizedText = b.settings.offlineSupportMinimizedText || "Contact Us");
            b.addMessageHandler("liveagent.chatCanceledOnDifferentTab", function() {
                b.fireEvent("liveagent.chatCanceledOnDifferentTab")
            });
            b.addEventHandler("error", this.disconnect.bind(this));
            b.addEventHandler("sessionDataRetrieved", function(a) {
                q = embedded_svc.liveAgentAPI.constructChatSettingsEndpointURL();
                a.CHASITOR_SERIALIZED_KEY ? (b.settings.agentAvailableOnButtonClick = !0, this.ping()) : (embedded_svc.menu || embedded_svc.settings.disableDeploymentDataPrefetch ||
                    embedded_svc.liveAgentAPI.getChatSettings(), b.loadFeatureScript("Invite", function() {
                        embedded_svc.liveAgentAPI.getButtonSettings();
                        document.querySelector("style#inert-style") || b.loadScriptFromDirectory("utils", "inert")
                    }));
                this.visitorInfo.initialize(a);
                return !!a.CHASITOR_SERIALIZED_KEY
            }.bind(this));
            b.addEventHandler("beforeCreate", function() {
                b.settings.visitorInfo = this.visitorInfo.getInfo()
            }.bind(this));
            b.addEventHandler("validateInit", function(a) {
                if ("string" !== typeof a.baseLiveAgentURL) throw Error("Invalid Live Agent chat URL: " +
                    a.baseLiveAgentURL);
                if ("string" !== typeof a.baseLiveAgentContentURL) throw Error("Invalid Live Agent content URL: " + a.baseLiveAgentContentURL);
                if (!this.isButtonId(a.buttonId)) throw Error("Invalid ButtonId Parameter Value: " + a.buttonId);
                if (!this.isDeploymentId(a.deploymentId)) throw Error("Invalid DeploymentId Parameter Value: " + a.deploymentId);
                return !0
            }.bind(this));
            b.loadStorageScript("Chasitor");
            b.registerStorageKeys("CHASITOR_SERIALIZED_KEY LA_ESW_CHAT_SCROLL_POSITION LA_ESW_UNSEEN_MESSAGES LA_ESW_SHOW_QUEUE_POSITION LA_VISITOR_INFO LA_ESW_FILE_TOKEN LA_ESW_FILE_UPLOAD_SERVLET_URL CHATBOT_FOOTER_MENU PRECHAT_FORM_DETAILS PRECHAT_ENTITIES".split(" "));
            "LiveAgent" === b.settings.entryFeature && this.updateButton()
        }
        
        g.prototype.appendInvitationsComponent = function() {
            var a = document.createElement("div");
            a.innerHTML = embedded_svc.config.invitation.htmlMarkup;
            if (embedded_svc.config.invitation.styles) {
                var c = document.createElement("style");
                c.type = "text/css";
                c.charset = "UTF-8";
                c.innerHTML = embedded_svc.config.invitation.styles;
                a.appendChild(c)
            }
            embedded_svc.settings.targetElement.appendChild(a);
            embedded_svc.config.invitation.invitationAPIs && (a = document.createElement("script"), a.type = "text/javascript", a.innerHTML =
                embedded_svc.config.invitation.invitationAPIs, embedded_svc.settings.targetElement.appendChild(a))
        };


    </script>
<style>
.chasitorText, .slds-input, .textAreaBox {    
    -webkit-user-select: text !important;
	user-select: text !important;
	-moz-user-select: text !important;
	-ms-user-select: text !important;
}

@media screen and (max-width: 1024px) {
	.embeddedServiceHelpButton {
		display: none !important;
	 }
	
	.minimizedContainer {
		position:fixed !important;
		bottom:70px !important;
		width:115px !important;
		right:2px !important;	
		height: 20px !important;
		font-weight: normal !important;
	}

	.cChatButton .messageText {
		margin-left: 3px !important;
		font-size: 10px !important;
	}

	.cChatButton .buttonMinimized {
		height: 30px !important;
	}

	.cChatButton .chatIcon {
		width: 14px !important;
		height: 14px !important;
	}
}

li.wrapper.chatMessage.chasitor.embeddedServiceLiveAgentStateChatItem.embeddedServiceLiveAgentStateChatMessage,
li.wrapper.chatMessage.chasitor.embeddedServiceLiveAgentStateChatItem.embeddedServiceLiveAgentStateChatBubble.embeddedServiceLiveAgentStateChatFileTransferMessage,
li.wrapper.embeddedServiceLiveAgentStateChatMessage  {
	min-width: 2px !important;
}

svg.slds-icon.slds-icon-text-default.slds-icon_x-small {
	height: 20px !important;
	min-height: 20px !important;
	width: 20px !important;
	min-width: 20px !important;
}

.helpButtonEnabled .embeddedServiceIcon {
	width: 16.67px;
	height: 16.67px;
	background-size: 16.67px;
	background-image: url('https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYLZQA2&d=/a/0E000000GNHh/r7XNnbD36f8lj8NtuQBcB55Me.jNG6IsoWAsz1vCsGI&operationContext=DELIVERY&viewId=05H0E000000HBRCUA4&dpt=');
}

.dialog-button-1 {
	width: 44px;
	height: 44px;
	border: 1px solid #262626 !important;
	box-sizing: border-box;
	background-color: white !important;
	border-radius: 4px;
	background-image: url('https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYSYQA2&d=/a/0E000000GNIV/6lZThIMuu.NdWhZ7vpuudBhsR1GR6rVGQY2yZlPm.M0&operationContext=DELIVERY&viewId=05H0E000000HBThUAO&dpt=') !important;
	background-size: 16px !important;
	background-position-x: center !important;
	background-position-y: center !important;
	background-repeat: no-repeat !important;
	display: block !important;
}

.waitingMessage, .waitingGreeting {
	color: black !important;
}ё

@media only screen and (min-width: 48em) { 
	.embeddedServiceHelpButton .helpButton .uiButton:hover::before, .embeddedServiceHelpButton .helpButton .uiButton:focus::before {
		display: none !important;
	}
}

h3#dialogTextTitle, .waitingGreeting, .embeddedServiceSidebarButton {
    font-weight: 700 !important;
}

.embeddedServiceSidebarButton {
    font-size: 14px !important;
}

button.minimizeButton:focus, button.closeButton:focus{
	outline: none;
	box-shadow: none;
}

.embeddedServiceSidebarExtendedHeader, .headerAnnouncement {
	display: none !important;
}

.embeddedServiceSidebarMinimizedDefaultUI {
	background: #F8FF13 !important;
	background-color: #F8FF13 !important;
}

.embeddedServiceHelpButton .helpButton {
	bottom: 16px !important;
	height: 40px !important;
	width: 168px !important;
	display: flex !important;
	justify-content: center !important;
	border-radius: 30px !important;
}

.embeddedServiceHelpButton .helpButton .uiButton {
	background-color: #222222;
	font-family: "Circe", sans-serif;
	color: black;
	height: 40px !important;
	width: 168px !important;
	display: block !important;
}

.embeddedServiceHelpButton .helpButton .uiButton:focus {
	outline: 1px solid #222222;
}

.embeddedServiceSidebar.layout-docked .dockableContainer, .embeddedServiceSidebarMinimizedDefaultUI.helpButton {
	border-radius: 0px;
}

.embeddedServiceHelpButton .helpButton .uiButton,
.embeddedServiceSidebarMinimizedDefaultUI.helpButton,
.embeddedServiceSidebarMinimizedDefaultUI.minimizedContainer:focus,
.embeddedServiceSidebarMinimizedDefaultUI.minimizedContainer:hover {
	background-color: #F8FF13 !important;
	border-color: #F8FF13 !important;
	color:#000000 !important;
	border-radius: 30px !important;
	padding: 0px 0px 0px 0px !important;
	box-shadow: none !important;
	outline: none !important;
	border-style: unset !important;
	text-decoration: none !important;
}

.helpButtonLabel {
	display: inline-block !important;
	line-height: 16.67px !important;
}

span.fileDescription.uiOutputText, span.fileName.uiOutputText, .uiOutputRichText a  {
	color: black !important;
}

.dialogButtonContainer {
	display: flex !important;
	justify-content: space-between !important;
	flex-direction: row-reverse !important;
	width: 290px !important;
	margin: auto !important;
	padding: 0 0px 16px !important;
}

.dialog-button-0 {
	width: 236px;
	height: 44px;
}

.message, .embeddedServiceSidebarMinimizedDefaultUI .content {
	background-color: #F8FF13 !important;
	border: none !important;
	padding: 0 0 0 0 !important;
	margin: 0 0 0 0  !important;
	font-family: Roboto Condensed;
	font-style: normal;
	font-weight: bold;
	font-size: 12px;
	line-height: 16.67px;
	display: flex;
	align-items: center;
	text-transform: uppercase;
	color:#000000;
	text-decoration: none;
}

.embeddedServiceHelpButton .helpButton .helpButtonEnabled:hover::before, .embeddedServiceHelpButton .helpButton .helpButtonEnabled:focus::before {
	background-color: white;
}

.messageContent path {
	stroke: black;
	fill: black;
}

.embeddedServiceSidebarButton .label, .embeddedServiceSidebarButton:disabled .label, .embeddedServiceLiveAgentStateChatPlaintextMessageDefaultUI.chasitor.plaintextContent {
	color: black;
}

.dialog-button-1 .bBody, .helpButtonEnabled .embeddedServiceIcon::before, .helpButtonEnabled .embeddedServiceIcon svg, .embeddedServiceHelpButton .helpButton .uiButton.helpButtonDisabled   {
	display: none !important;
}

.embeddedServiceSidebarDialogState .dialogButton,
.embeddedServiceSidebarDialogState .dialogButton:focus,
.embeddedServiceSidebarDialogState .dialogButton:hover {
	background-color: #F8FF13;
	border-color: #F8FF13;
	color:#000000;
	padding: 10px 16px 10px 16px;
	box-shadow: none;
	outline: none;
	border-style: unset;
	text-decoration: none;
}

.embeddedServiceSidebarButton.uiButton--inverse:not(:disabled):focus,
.embeddedServiceSidebarButton.uiButton--inverse:not(:disabled):hover,
.embeddedServiceSidebarButton.uiButton--inverse, .embeddedServiceSidebarButton.uiButton--inverse:disabled {
	background-color: #F8FF13;
	margin-bottom: 8px;
}

.embeddedServiceSidebarButton.uiButton--inverse .label {
	color:#000000 !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .chasitorControls .uiInput {
	border: 1px solid #D9D9D9;
}

.embeddedServiceLiveAgentStateChat .messageArea {
	border: none;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:hover,
.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:focus,
.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:active {
	color: #787c80 !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-button:focus {
	box-shadow: none;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu-items .slds-dropdown__item>a {
	border: none !important;
	box-shadow: none !important;
}

.embeddedServiceSidebarButton:not(:disabled):focus, .embeddedServiceSidebarButton:not(:disabled):hover,
.embeddedServiceLiveAgentStateChat .endChatContainer .endChatButton {
	background: var(--lwc-colorBrandSecondary,#f8ff13);
	margin-bottom: 8px;
}

.uiButton--default:hover .label, .uiButton--default:focus .label {
	color:black;
}

.embeddedServiceLiveAgentStateChatInputFooter {
	margin-bottom: 0px !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu .slds-dropdown-trigger_click.slds-is-open .slds-button {
	color:#787c80;
}

.embeddedServiceLiveAgentStateChat .messageArea:focus {
	border: none;
}

.embeddedServiceLiveAgentStateWaiting .loadingBall,
.embeddedServiceLiveAgentQueuePosition .embeddedServiceLoadingBalls .loadingBall {
	background-color: #787c80 !important;
}

.embeddedServiceLiveAgentStateChatInputFooter .footerMenuWrapper .footer-menu-items .slds-dropdown__item>a {
    color: #5a5d60 !important;
}

</style>
<script type="text/javascript">
    var accountId  = new URLSearchParams(window.location.search).get('accountID');
    accountId = (accountId == "undefined") ? null : accountId;
    var language =  new URLSearchParams(window.location.search).get('language');//document.querySelector('html').getAttribute('lang');
	language = (language == "en") ? 'en-US' : language;
	
	var initESW = function(gslbBaseURL) {
    embedded_svc.settings.avatarImgURL = 'https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYFqQAM&d=/a/0E000000GNHX/OJDIjzopJQi7OOcvCcCRZeXD6D3rqn3820_3pgs1AYE&operationContext=DELIVERY&viewId=05H0E000000HBQiUAO&dpt=';
    embedded_svc.settings.chatbotAvatarImgURL = 'https://parimatch--devpro.my.salesforce.com/sfc/dist/version/download/?oid=00D0E000000E6IW&ids=0680E000001jYFqQAM&d=/a/0E000000GNHX/OJDIjzopJQi7OOcvCcCRZeXD6D3rqn3820_3pgs1AYE&operationContext=DELIVERY&viewId=05H0E000000HBQiUAO&dpt=';
    embedded_svc.settings.displayHelpButton = true;
    embedded_svc.settings.language = language;

    embedded_svc.settings.defaultMinimizedText = (language == 'ru') ? 'ЧАТ ПОДДЕРЖКИ' : 'SUPPORT CHAT';
    embedded_svc.settings.disabledMinimizedText = (language == 'ru') ? 'ЧАТ ПОДДЕРЖКИ' : 'SUPPORT CHAT';
    embedded_svc.settings.loadingText = (language == 'ru') ? 'Загрузка...' : 'Loading...';

    embedded_svc.settings.extraPrechatFormDetails = (accountId) ?
    [
        {"label":"PreChat Form AccountID", "transcriptFields": ["PreChat_Form_AccountID__c"], "value" : accountId},
        {"label":"Start Url", "transcriptFields": ["Prechat_StartUrl__c"], "value": window.location.href,"displayToAgent":false},
        {"label":"Is Logged", "transcriptFields": ["Is_Logged__c"], "value" : "true"}
    ] :

    [
        {"label":"Name",  "transcriptFields": ["PreChat_Form_Name__c"]},
        {"label":"Email", "transcriptFields": ["PreChat_Form_Email__c"]},
        {"label":"Phone", "transcriptFields": ["PreChat_Form_Phone__c"]},
        {"label":"Start Url", "transcriptFields": ["Prechat_StartUrl__c"], "value": window.location.href,"displayToAgent":false}
    ];

	embedded_svc.settings.extraPrechatInfo = [{"entityFieldMaps":[{"doCreate":false,"doFind":false,"fieldName":"LastName","isExactMatch":true,"label":"Last Name"}],"entityName":"Contact","showOnCreate":true}];

    embedded_svc.settings.enabledFeatures = ['LiveAgent'];
    embedded_svc.settings.entryFeature = 'LiveAgent';

    embedded_svc.init(
        'https://parimatch.my.salesforce.com',
        'https://parimatchchat.secure.force.com/surveychat',
            gslbBaseURL,
            '00D2p00000139LC',
            (accountId) ? 'Chat_Deployment_LoginUser_New' : 'Chat_Deployment_Desktop_New',
            {
                baseLiveAgentContentURL: 'https://c.la1-c2-cdg.salesforceliveagent.com/content',
                deploymentId: '5722p0000000G2t',
                buttonId: '5732p0000004Tnn',
                baseLiveAgentURL: 'https://d.la1-c2-cdg.salesforceliveagent.com/chat',
                eswLiveAgentDevName: (accountId) ? 'EmbeddedServiceLiveAgent_Parent04I2p0000008PviEAE_177ee7ddf7d' :
                'EmbeddedServiceLiveAgent_Parent04I2p0000008PvdEAE_177ee4a5348',
                isOfflineSupportEnabled: false
            }
    );
};

if (!window.embedded_svc) {
    var s = document.createElement('script');
    s.setAttribute('src', 'https://parimatch.my.salesforce.com/embeddedservice/5.0/esw.min.js');
    s.onload = function() {
        initESW(null);
    };
    document.body.appendChild(s);
} else {
    initESW('https://service.force.com');
}

document.addEventListener(
			"setCounter",
			function(event) {
			  var counter = document.getElementsByClassName("dot")[0];
			  if (counter) {
				counter.style.visibility = "visible";
			  }
			},
			false
		);
		
		
		document.addEventListener(
		  "setCustomField",
		  function(event) {
			var detail = event.detail;
			embedded_svc.settings.extraPrechatFormDetails[0].value = event.detail.name;
			embedded_svc.settings.extraPrechatFormDetails[1].value = event.detail.email;
			embedded_svc.settings.extraPrechatFormDetails[2].value = event.detail.phone;
			event.detail.callback();
		  },
		  false
		);

</script>-->
    </body>

    
</html>

